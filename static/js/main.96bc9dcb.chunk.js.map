{"version":3,"sources":["components/TodoDisplay.js","components/DisplayCompleted.js","components/TodoCreator.js","App.js","index.js"],"names":["TodoDisplay","props","todo","remove","addToCompleted","className","text","onClick","id","DisplayCompleted","returnToActive","removeCompleted","compTime","TodoCreator","displayActive","localActiveTodo","JSON","parse","localStorage","getItem","localCompletedTodo","useState","setText","todos","setTodos","completedTodos","setCompletedTodos","monthsOfYear","useEffect","setItem","stringify","addTodo","e","length","preventDefault","removeTodo","newArr","i","push","removeCompletedTodo","time","monthNum","date","Date","getMonth","getDate","toLocaleTimeString","substring","comptodo","activeTodo","onSubmit","type","value","onChange","target","map","App","setDisplayActive","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96bc9dcb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TodoDisplay(props) {\r\n  const {todo, remove, addToCompleted} = props\r\n\r\n  return (\r\n    <div className=\"todo-display\">\r\n      <div className=\"todo-text\">{todo.text}</div>\r\n      <div>\r\n        <div className=\"btn-green\" onClick={() => addToCompleted(todo)}><i className=\"fas fa-check-circle\"></i></div>\r\n        <div className=\"btn-red\" onClick={() => remove(todo.id)}><i className=\"fas fa-times-circle\"></i></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoDisplay\r\n","import React from 'react'\r\n\r\nfunction DisplayCompleted(props) {\r\n  const {todo, returnToActive, removeCompleted} = props\r\n\r\n  return (\r\n    <div className=\"todo-display\">\r\n      <div>{todo.text}</div>\r\n      <div className=\"comp-display-end\">\r\n        <div className=\"comp-date\">{todo.compTime}</div>\r\n        <div onClick={() => returnToActive(todo)} className=\"btn-blue\"><i className=\"fas fa-undo-alt\"></i></div>\r\n        <div className=\"btn-red\" onClick={() => removeCompleted(todo.id)}><i className=\"fas fa-times-circle\"></i></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayCompleted\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoDisplay from \"./TodoDisplay\";\r\nimport DisplayCompleted from \"./DisplayCompleted\";\r\n\r\nfunction TodoCreator({displayActive}) {\r\n  const localActiveTodo = JSON.parse(localStorage.getItem('active-todos')) || []\r\n  const localCompletedTodo = JSON.parse(localStorage.getItem('completed-todos')) || []\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [todos, setTodos] = useState(localActiveTodo)\r\n  const [completedTodos, setCompletedTodos] = useState(localCompletedTodo)\r\n\r\n  const monthsOfYear = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('active-todos', JSON.stringify(todos))\r\n    localStorage.setItem('completed-todos', JSON.stringify(completedTodos))\r\n  }, [todos, completedTodos])\r\n\r\n  const addTodo = (e) =>{\r\n    if(text){\r\n      const todo = {\r\n        text:text,\r\n        id: todos.length+''+text\r\n      }\r\n      setTodos([todo, ...todos])\r\n      setText(\"\")\r\n    }\r\n    e.preventDefault()\r\n  }\r\n\r\n  const removeTodo = (id) => {\r\n    const newArr = []\r\n    for(let i = 0; i < todos.length; i++){\r\n      if(todos[i].id !== id){\r\n        newArr.push(todos[i])\r\n      }\r\n    }\r\n    setTodos(newArr)\r\n  }\r\n\r\n  const removeCompletedTodo = (id) => {\r\n    const newArr = []\r\n    for(let i = 0; i < completedTodos.length; i++){\r\n      if(completedTodos[i].id !== id){\r\n        newArr.push(completedTodos[i])\r\n      }\r\n    }\r\n    setCompletedTodos(newArr)\r\n  }\r\n\r\n  const getMonth = monthNum => {\r\n    return monthsOfYear[monthNum]\r\n  }\r\n\r\n  const removeSeconds = time =>{\r\n    return time.substring(0, time.length-3)\r\n  }\r\n\r\n  const addToCompleted = (todo) => {\r\n    const date = new Date()\r\n    const compTodo = {\r\n      id: todo.id,\r\n      text: todo.text,\r\n      compTime: `${getMonth(date.getMonth())} ${date.getDate()}  ${removeSeconds(date.toLocaleTimeString())}`\r\n    }\r\n    //Add todo to array of completed todos\r\n    const newArr = [compTodo, ...completedTodos]\r\n    setCompletedTodos(newArr)\r\n\r\n    //Then remove todo from active todo array\r\n    removeTodo(todo.id)\r\n  }\r\n\r\n  const returnToActive = (comptodo) =>{\r\n    //remove todo from completed list\r\n    const newArr = []\r\n    for(let i = 0; i < completedTodos.length; i++){\r\n      if(completedTodos[i].id !== comptodo.id){\r\n        newArr.push(completedTodos[i])\r\n      }\r\n    }\r\n    setCompletedTodos(newArr)\r\n\r\n    //Add todo to active array list\r\n    const activeTodo = {\r\n      id: comptodo.id,\r\n      text: comptodo.text\r\n    }\r\n    setTodos([activeTodo, ...todos])\r\n  } \r\n\r\n  function TodoCreator(){\r\n    return (\r\n      <div className=\"todo-creator\">\r\n        <form onSubmit={addTodo}>\r\n          <input type=\"text\" value={text} onChange={(e) => {setText(e.target.value)}}/>\r\n          <input type=\"submit\"  value=\"Add Todo\"/>\r\n        </form>\r\n        <div className=\"todo-display-wrapper\">\r\n          {\r\n            todos.length > 0 ? todos.map(todo => <TodoDisplay key={todo.id} todo={todo} remove={removeTodo} addToCompleted={addToCompleted}/>) : <h3>You Have No Active Tasks</h3>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function DisplayCompletedTodos(){\r\n    return(\r\n      <div className=\"completed-display-wrapper\">\r\n        {\r\n          completedTodos.length > 0 ? completedTodos.map(todo => <DisplayCompleted key={todo.id} todo={todo} returnToActive={returnToActive} removeCompleted={removeCompletedTodo} />) : <h3>You Have No Completed Tasks</h3>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return displayActive ? TodoCreator() : DisplayCompletedTodos()\r\n}\r\n\r\nexport default TodoCreator;\r\n","import \"./index.scss\";\r\nimport TodoCreator from \"./components/TodoCreator\";\r\nimport React, {useState} from 'react';\r\n\r\nfunction App() {\r\n  const [displayActive, setDisplayActive] = useState(true)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"todo\">\r\n        <div className=\"page-title\">TODO LIST</div>\r\n        <div className=\"menus\">\r\n            <div onClick={() => setDisplayActive(true)} className={displayActive ? \"menu-element active\" : \"menu-element\"}>\r\n              <div>\r\n                <i className=\"fas fa-clipboard-list icon\"></i>Active\r\n              </div>\r\n            </div>\r\n            <div onClick={() => setDisplayActive(false)} className={displayActive ? \"menu-element\" : \"menu-element active\"}>\r\n              <i className=\"fas fa-clipboard-check icon\"></i>Completed\r\n            </div>\r\n          </div>\r\n          <TodoCreator displayActive={displayActive}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}